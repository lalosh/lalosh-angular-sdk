import { HttpMethodParams } from "../../types/http/options";
import { PartialBy } from "../../types/utils/partial-by";
import { buildURLParams } from "../../url/url.utils";
import { fetchResponseMapper, httpErrorLogger, streamToJson } from "../http.utils";


/**
 * @function httpGet 
 * 
 * send get request in browser
 * 
 * @param {object} options 
 * @param {string} options.url - request url
 * @param {object} options.headers - key-value headers to send with the request
 * @param {object} options.params - request url' params
 * 
 * @returns {Promise} - get response
 */
export function httpGet(

    { url, headers, params }:

        PartialBy<
            Omit<HttpMethodParams, "body">,
            "headers" | "params"
        >
) {

    try {

        /** build url params */
        let requestParams = buildURLParams(params);
        requestParams = requestParams ? `?${requestParams}` : ``;

        /** use fetch in browser */
        return fetch(
            `${url}${requestParams}`,
            {
                method: 'GET',
                headers: new Headers(headers),
            })
            .then(streamToJson)
            .then(fetchResponseMapper);

    } catch (error) {

        httpErrorLogger(error, 'Get');

        throw error;
    }
}
