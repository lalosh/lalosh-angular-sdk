{"version":3,"sources":["../../../../projects/lalosh/angular-sdk/src/components/filters/filters.component.ts","../../../../projects/lalosh/angular-sdk/src/components/pagination/pagination.component.ts","../../../../projects/lalosh/angular-sdk/src/components/recommend/recommend.component.ts","../../../../projects/lalosh/angular-sdk/src/services/data.service.ts","../../../../projects/lalosh/angular-sdk/src/components/results/results.component.ts","../../../../projects/lalosh/angular-sdk/src/services/config.service.ts","../../../../projects/lalosh/angular-sdk/src/services/client.service.ts","../../../../projects/lalosh/angular-sdk/src/components/search/search.component.ts","../../../../projects/lalosh/angular-sdk/src/modules/lableb.module.ts"],"names":["FiltersComponent","prototype","ngOnInit","Component","args","selector","template","PaginationComponent","RecommendComponent","DataService","this","searchResults","searchResultsSubject","BehaviorSubject","setSearchResults","results","next","Injectable","providedIn","ResultsComponent","dataService","projectName","collectionName","searchToken","autoCompleteHandler","generateSessionId","indexToken","recommendHandler","searchHandler","ClientService","config","client","console","log","init","SDKConfigurations","SearchComponent","clientService","searchInput","FormControl","_this","valueChanges","subscribe","query","_b","_a","search","then","response","catch","error","LablebModule","parentModule","Error","forRoot","SDKConfig","ngModule","providers","provide","useValue","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","exports","decorators","type","Optional","SkipSelf"],"mappings":"ilBASE,SAAAA,YAEAA,EAAAC,UAAAC,SAAA,sCATDC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,cACVC,SAAA,iGCKA,SAAAC,YAEAA,EAAAN,UAAAC,SAAA,sCATDC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,SAAA,oGCKA,SAAAE,YAEAA,EAAAP,UAAAC,SAAA,sCATDC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,gBACVC,SAAA,8FCGF,IAAAG,EAAA,WAEE,SAAAA,IACOC,KAAAC,cAAuC,KACvCD,KAAAE,qBAAiE,IAAIC,EAAAA,gBAAgB,WAE5FJ,EAAAR,UAAAa,iBAAA,SAAiBC,GACfL,KAAKC,cAAgBI,EACrBL,KAAKE,qBAAqBI,KAAKD,MARnC,kHAHCE,EAAAA,WAAUb,KAAA,CAAC,CACVc,WAAY,kECSZ,SAAAC,EACUC,GAAAV,KAAAU,YAAAA,EAHHV,KAAAC,cAA0D,IAAIE,EAAAA,gBAAgB,IAKnFH,KAAKC,cAAgBD,KAAKU,YAAYR,4BAGxCO,EAAAlB,UAAAC,SAAA,sCAfDC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,SAAA,wMAJOG,WCAT,WACEC,KAAAW,YAAc,GACdX,KAAAY,eAAiB,GACjBZ,KAAAa,YAAc,GACdb,KAAAc,oBAAsB,GACtBd,KAAAe,kBAAoB,WAAM,MAAA,IAC1Bf,KAAAgB,WAAa,GACbhB,KAAAiB,iBAAmB,GACnBjB,KAAAkB,cAAgB,ICJlBC,EAIE,SACUC,GAAApB,KAAAoB,OAAAA,EAHHpB,KAAAqB,OAAyC,KAK9CC,QAAQC,IAAI,aACZD,QAAQC,IAAI,6BACZD,QAAQC,IAAI,aACZvB,KAAKqB,OAASG,EAAAA,KAAKxB,KAAKoB,uIAb3Bb,EAAAA,WAAUb,KAAA,CAAC,CACVc,WAAY,oDAJLiB,sBCcP,SAAAC,EACUC,EACAjB,GADAV,KAAA2B,cAAAA,EACA3B,KAAAU,YAAAA,EAJVV,KAAA4B,YAA2B,IAAIC,EAAAA,YAAY,WAQ3CH,EAAAnC,UAAAC,SAAA,WAAA,IAAAsC,EAAA9B,KAEEA,KAAK4B,YAAYG,aACdC,WAAU,SAACC,WAEgB,QAA1BC,EAAkB,QAAlBC,EAAAL,EAAKH,qBAAa,IAAAQ,OAAA,EAAAA,EAAEd,cAAM,IAAAa,GAAAA,EAAEE,OAAO,CAAEH,MAAKA,IACvCI,MAAK,SAAAC,GACJR,EAAKpB,YAAYN,iBAAiBkC,MAEnCC,OAAM,SAAAC,GAAS,OAAAlB,QAAQkB,MAAMA,mCAxBvC/C,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,gBACVC,SAAA,0IANOuB,SACApB,sBCqCP,SAAA0C,EAAoCC,GAElC,GAAIA,EACF,MAAM,IAAIC,MACR,0EAICF,EAAAG,QAAP,SAAeC,GAEb,MAAO,CACLC,SAAUL,EACVM,UAAW,CACT,CAAEC,QAASvB,EAAmBwB,SAAUJ,+BAvC/CK,EAAAA,SAAQxD,KAAA,CAAC,CACRyD,aAAc,CACZzB,EACAjB,EACAX,EACAR,EACAO,GAEFuD,QAAS,CACPC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,qBAEFC,QAAS,CACP9B,EACAjB,EACAX,EACAR,EACAO,GAEFkD,UAAW,gDAMwCN,EAAYgB,WAAA,CAAA,CAAAC,KAAlDC,EAAAA,UAAQ,CAAAD,KAAIE,EAAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.css']\n})\nexport class FiltersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-recommend',\n  templateUrl: './recommend.component.html',\n  styleUrls: ['./recommend.component.css']\n})\nexport class RecommendComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { SearchResponse } from '@lableb/javascript-sdk/dist/types';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor() { }\n  public searchResults: SearchResponse | null = null;\n  public searchResultsSubject: BehaviorSubject<Partial<SearchResponse>> = new BehaviorSubject({});\n\n  setSearchResults(results: SearchResponse) {\n    this.searchResults = results;\n    this.searchResultsSubject.next(results);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SearchResponse } from '@lableb/javascript-sdk/dist/types';\nimport { BehaviorSubject } from 'rxjs';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'lableb-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css']\n})\nexport class ResultsComponent implements OnInit {\n\n  public searchResults: BehaviorSubject<Partial<SearchResponse>> = new BehaviorSubject({});\n\n  constructor(\n    private dataService: DataService\n  ) { \n    this.searchResults = this.dataService.searchResultsSubject;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { LablebSDKOptions } from '@lableb/javascript-sdk/dist/types';\n\n\nexport class SDKConfigurations implements LablebSDKOptions {\n  projectName = '';\n  collectionName = '';\n  searchToken = '';\n  autoCompleteHandler = '';\n  generateSessionId = () => '';\n  indexToken = '';\n  recommendHandler = '';\n  searchHandler = '';\n}\n","import { Injectable } from '@angular/core';\nimport { SDKConfigurations } from './config.service';\nimport { init } from '@lableb/javascript-sdk';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  public client: ReturnType<typeof init> | null = null;\n\n  constructor(\n    private config: SDKConfigurations\n  ) {\n    console.log('---------')\n    console.log('Client Service construcor')\n    console.log('---------')\n    this.client = init(this.config);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ClientService } from '../../services/client.service';\nimport { DataService } from '../../services/data.service';\n\n\n@Component({\n  selector: 'lableb-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  searchInput: FormControl = new FormControl('');\n\n  constructor(\n    private clientService: ClientService,\n    private dataService: DataService,\n  ) { }\n\n\n  ngOnInit(): void {\n\n    this.searchInput.valueChanges\n      .subscribe((query) => {\n\n        this.clientService?.client?.search({ query })\n          .then(response => {\n            this.dataService.setSearchResults(response);\n          })\n          .catch(error => console.error(error));\n\n      });\n\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  SearchComponent,\n  ResultsComponent,\n  RecommendComponent,\n  FiltersComponent,\n  PaginationComponent,\n} from '../components';\nimport { SDKConfigurations } from '../services/config.service';\n\n\n\n@NgModule({\n  declarations: [\n    SearchComponent,\n    ResultsComponent,\n    RecommendComponent,\n    FiltersComponent,\n    PaginationComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    SearchComponent,\n    ResultsComponent,\n    RecommendComponent,\n    FiltersComponent,\n    PaginationComponent,\n  ],\n  providers: [\n  ]\n\n})\nexport class LablebModule {\n\n  constructor(@Optional() @SkipSelf() parentModule?: LablebModule) {\n    \n    if (parentModule) {\n      throw new Error(\n        'LablebModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(SDKConfig: SDKConfigurations): ModuleWithProviders<LablebModule> {\n\n    return {\n      ngModule: LablebModule,\n      providers: [\n        { provide: SDKConfigurations, useValue: SDKConfig }\n      ]\n    }\n\n  }\n}\n"]}