import { CountryCode, IPAddress } from '../../src/types/url';
import { URLBuilder } from '../../src/url';


describe('Test Generating Recommend URLs', () => {

    let options = {
        baseURL: 'https://www.example.com/api/v2',
        collectionName: 'posts',
        projectName: 'wptest',
        indexToken: '38937489374h3jhkahf978a6fhfu',
        searchToken: 'kajlfif8a678a78fh2224jh24fa23',
        searchHandler: 'default',
        autoCompleteHandler: 'suggest',
        recommendHandler: 'default',
    };
    let urlInstance = URLBuilder(options);;


    beforeAll(() => {
        urlInstance = URLBuilder(options);
    });
    






    test('Correctly generate recommend url', () => {

        let recommendURL = urlInstance.recommendURL();

        let rightAnswer = `${options.baseURL}/projects/${options.projectName}/collections/${options.collectionName}/recommend/${options.recommendHandler}?token=${options.searchToken}`;

        expect(recommendURL).toBe(rightAnswer);
    });



    test('Correctly generate recommend url with params', () => {

        let recommendURLOptions = {
            id: 34,
            title: 'some Title here...',
            url: 'https://www.some.com',
            limit: 3,
            sessionId: 'afjaif34335',
            userId: 3,
            userIp: '162.2.225.2' as IPAddress,
            userCountry: 'AF' as CountryCode,
        }
        let recommendURL = urlInstance.recommendURL(recommendURLOptions);

        let rightAnswer = `${options.baseURL}/projects/${options.projectName}/collections/${options.collectionName}/recommend/${options.recommendHandler}`;
        rightAnswer += `?id=${recommendURLOptions.id}`;
        rightAnswer += `&title=${recommendURLOptions.title.replace(/\ /g, '+')}`;
        rightAnswer += `&url=${recommendURLOptions.url}`;
        rightAnswer += `&limit=${recommendURLOptions.limit}`;
        rightAnswer += `&session_id=${recommendURLOptions.sessionId}`;
        rightAnswer += `&user_id=${recommendURLOptions.userId}`;
        rightAnswer += `&user_ip=${recommendURLOptions.userIp}`;
        rightAnswer += `&user_country=${recommendURLOptions.userCountry}`;
        rightAnswer += `&token=${options.searchToken}`;

        expect(recommendURL).toBe(rightAnswer);
    });





    test('Correctly generate recommend feed back URL', () => {

        let recommendFeedbackURL = urlInstance.recommendFeedbackURL();

        let rightResult = `${options.baseURL}/projects/${options.projectName}/collections/${options.collectionName}/recommend/${options.recommendHandler}/feedback/hits?token=${options.searchToken}`;

        expect(recommendFeedbackURL).toBe(rightResult);
    });




    test('Correctly generate recommend feed back URL with params', () => {


        let recommendFeedbackOptions = {
            sourceId: 33,
            sourceTitle: 'Source Title Here...',
            sourceUrl: 'https://www.example.com/documents/some-route',
            targetId: 22,
            targetTitle: 'Target title here',
            targetUrl: 'http://www.lableb.com/v2/doc/',
            itemOrder: 3,
            sessionId: '75a7i35fjalij234',
            userId: 3,
            userIp: '192.135.1.2' as IPAddress,
            userCountry: 'AF' as CountryCode,
        }

        let recommendFeedbackURL = urlInstance.recommendFeedbackURL(recommendFeedbackOptions);


        let rightResult = `${options.baseURL}/projects/${options.projectName}/collections/${options.collectionName}/recommend/${options.recommendHandler}/feedback/hits`;
        rightResult += `?source_id=${recommendFeedbackOptions.sourceId}`;
        rightResult += `&source_title=${recommendFeedbackOptions.sourceTitle.replace(/\ /g, '+')}`;
        rightResult += `&source_url=${recommendFeedbackOptions.sourceUrl}`;
        rightResult += `&target_id=${recommendFeedbackOptions.targetId}`;
        rightResult += `&target_title=${recommendFeedbackOptions.targetTitle.replace(/\ /g, '+')}`;
        rightResult += `&target_url=${recommendFeedbackOptions.targetUrl}`;
        rightResult += `&item_order=${recommendFeedbackOptions.itemOrder}`;
        rightResult += `&session_id=${recommendFeedbackOptions.sessionId}`;
        rightResult += `&user_id=${recommendFeedbackOptions.userId}`;
        rightResult += `&user_ip=${recommendFeedbackOptions.userIp}`;
        rightResult += `&user_country=${recommendFeedbackOptions.userCountry}`;
        rightResult += `&token=${options.searchToken}`;

        expect(recommendFeedbackURL).toBe(rightResult);
    });


    
});