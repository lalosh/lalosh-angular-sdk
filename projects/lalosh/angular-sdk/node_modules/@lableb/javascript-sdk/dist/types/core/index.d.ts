import { LablebSDKOptions } from '../types/sdk/options';
import { URLBuilder } from '../url';
import { autocomplete } from './autocomplete';
import { deleteDocument } from './delete';
import { indexDocuments } from './indexing';
import { recommend } from './recommend';
import { search } from './search';
import { HttpClient } from '../http';
import { searchFeedback, searchFeedbackFromURL } from './search-feedback';
import { autocompleteFeedback, autocompleteFeedbackFromURL } from './autocomplete-feedback';
import { recommendFeedback, recommendFeedbackFromURL } from './recommend-feedback';
export interface LablebSDKContext {
    /**
     * Http client
     */
    httpClient: ReturnType<typeof HttpClient>;
    urlBuilder: ReturnType<typeof URLBuilder>;
    sdkOptions: LablebSDKOptions;
    sessionId?: string;
}
/**
 * Lableb SDK Module
 *
 * SDK offer you search, autocomplete, and recommend to use in browser
 * and additional indexing & delete functions to use in node.js
 */
export declare function LablebSDK(sdkOptions?: LablebSDKOptions): {
    /** Send Search queries at Lableb Cloud */
    search: (options?: Pick<import("..").SearchURLOptions, "query" | "skip" | "limit" | "filter" | "itemURLSchema" | "userId" | "userIp" | "userCountry"> | undefined) => ReturnType<typeof search>;
    /** Send Search feedback to Lableb Cloud */
    searchFeedback: (options?: Pick<import("..").SearchFeedbackURLOptions, "url" | "query" | "userId" | "userIp" | "userCountry" | "itemId" | "itemOrder"> | undefined) => ReturnType<typeof searchFeedback>;
    /** Directly send search feedback from url */
    searchFeedbackFromURL: (url: string) => ReturnType<typeof searchFeedbackFromURL>;
    /** Make autocomplete request to Lableb Cloud API */
    autocomplete: (options: Pick<import("..").AutocompleteURLOptions, "query" | "itemURLSchema" | "userId" | "userIp" | "userCountry">) => ReturnType<typeof autocomplete>;
    /** Send autocomplete feedback to Lableb Cloud API */
    autocompleteFeedback: (options: Pick<import("..").AutocompleteFeedbackURLOptions, "url" | "query" | "userId" | "userIp" | "userCountry" | "itemId" | "itemOrder">) => ReturnType<typeof autocompleteFeedback>;
    /** Send autocomplete feedback to Lableb Cloud API from a given URL  */
    autocompleteFeedbackFromURL: (url: string) => ReturnType<typeof autocompleteFeedbackFromURL>;
    /** Request Recommendation for some document from Lableb Cloud API */
    recommend: (options: Pick<import("..").RecommendURLOptions, "skip" | "limit" | "itemURLSchema" | "userId" | "userIp" | "userCountry" | "id" | "title">) => ReturnType<typeof recommend>;
    /** Send Recommend Feedback to Lableb */
    recommendFeedback: (options: Pick<import("..").RecommendFeedbackURLOptions, "userId" | "userIp" | "userCountry" | "itemOrder" | "sourceId" | "sourceTitle" | "sourceUrl" | "targetId" | "targetTitle" | "targetUrl">) => ReturnType<typeof recommendFeedback>;
    /** Send Recommend Feedback to Lableb from a given url */
    recommendFeedbackFromURL: (url: string) => ReturnType<typeof recommendFeedbackFromURL>;
    /**
     * Index documents at Lableb Cloud
     * pass array of objects to index(or update) them immediately
     */
    indexDocuments: (documents: import("..").LablebDocument[]) => ReturnType<typeof indexDocuments>;
    /**
     * Delete document at Lableb Cloud by id
     */
    delete: (options: import("..").URLDeleteOptions) => ReturnType<typeof deleteDocument>;
};
