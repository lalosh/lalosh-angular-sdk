import { URLBuilderOptions } from '../types/url';
import { searchURL } from './search';
import { indexDocumentURL, updateDocumentURL } from './indexing';
import { autocompleteURL } from './autocomplete';
import { recommendURL } from './recommend';
import { deleteDocumentURL } from './delete';
import { searchFeedbackURL } from './search-feedback';
import { autocompleteFeedbackURL } from './autocomplete-feedback';
import { recommendFeedbackURL } from './recommend-feedback';
/**
 * URLBuilder Module used to generate URLs of all requests used inside the SDK
 *
 * @param {object} options
 * @param {string} options.baseURL - base url link
 * @param {string} options.projectName - project name to be used in url builder
 * @param {string} options.collectionName - collection name to be used in url
 * @param {string} options.searchHandler - search handler name
 * @param {string} options.autoCompleteHandler - auto complete handler name
 * @param {string} options.recommendHandler - recommendation handler name
 * @param {string} options.searchToken - search token string
 * @param {string} options.indexToken - index token string
 *
 * @returns {URLBuilderAPI}
 */
export declare function URLBuilder(options: URLBuilderOptions): {
    /**
     * @function indexDocumentURL
     * return index documents request's url
     */
    indexDocumentURL: () => ReturnType<typeof indexDocumentURL>;
    /**
     * @function updateDocumentURL
     * return update documents request's url
     */
    updateDocumentURL: () => ReturnType<typeof updateDocumentURL>;
    /**
     * @function searchURL
     * return search for documents request's url
     */
    searchURL: (searchURLOptions?: Partial<import("../types/url").SearchURLOptions> | undefined) => ReturnType<typeof searchURL>;
    /**
     * @function searchFeedbackURL
     * return search feedback documents request's url
     */
    searchFeedbackURL: (searchFeedbackOptions?: import("../types/url").SearchFeedbackURLOptions | undefined) => ReturnType<typeof searchFeedbackURL>;
    /**
     * @function autocompleteURL
     * return autocomplete request's url
     */
    autocompleteURL: (autocompleteURLOptions?: import("../types/url").AutocompleteURLOptions | undefined) => ReturnType<typeof autocompleteURL>;
    /**
     * @function autocompleteFeedbackURL
     * return autocomplete feedback request's url
     */
    autocompleteFeedbackURL: (autocompleteFeedbackOptions?: import("../types/url").AutocompleteFeedbackURLOptions | undefined) => ReturnType<typeof autocompleteFeedbackURL>;
    /**
     * @function recommendURL
     * return recommend request's url
     */
    recommendURL: (recommendURLOptions?: Partial<import("../types/url").RecommendURLOptions> | undefined) => ReturnType<typeof recommendURL>;
    /**
     * @function recommendFeedbackURL
     * return recommend feedback request's url
     */
    recommendFeedbackURL: (recommendFeedbackOptions?: import("../types/url").RecommendFeedbackURLOptions | undefined) => ReturnType<typeof recommendFeedbackURL>;
    /**
     * @function deleteDocumentURL
     * return delete documents request's url
     */
    deleteDocumentURL: (p_0: import("../types/url").URLDeleteOptions) => ReturnType<typeof deleteDocumentURL>;
};
