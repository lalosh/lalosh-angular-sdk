import { camelCaseToSnackCase, customIdentity } from "../helpers";
import { pickBy } from "../helpers/pick-by";
import { SearchFeedbackURLOptions, URLBuilderExecutionContext } from "../types/url";
import { buildURLParams } from "./url.utils";





/**
 * Generate Search Feedback URL
 * 
 * @param {object} searchFeedbackOptions - options object 
 * @param {string} searchFeedbackOptions.query - query sent with the search request
 * @param {number} searchFeedbackOptions.itemId - document id from search response(default to `id` but might be changed in project configuration so you might see it under different name)
 * @param {number} searchFeedbackOptions.itemOrder - the order the item came in from the response
 * @param {string} searchFeedbackOptions.url - the item url on the host website
 * @param {string} searchFeedbackOptions.sessionId - unique session id per user
 * @param {number} searchFeedbackOptions.userId - unique user id
 * @param {string} searchFeedbackOptions.userIp - user ip address
 * @param {string} searchFeedbackOptions.userCountry - user country iso 3166 code
 * 
 * @return {string} URL for search feed back request
 */
export function searchFeedbackURL(

    this: URLBuilderExecutionContext,

    searchFeedbackOptions: SearchFeedbackURLOptions = { query: '' }

) {

    this.checkExistence({
        functionName: 'searchFeedbackURL',
        properties: ["projectName", "collectionName", "searchHandler"]
    });

    /** destruct properties */
    const { baseURL, projectName, collectionName, searchHandler } = this.options;
    const { query, ...restOptions } = searchFeedbackOptions;


    /**
     * convert to snack case and remove undefined values
     */
    let urlParams = buildURLParams(
        pickBy(
            camelCaseToSnackCase({
                q: query,
                ...restOptions,
                token: this.options.searchToken
            }),
            customIdentity,
        )
    );

    urlParams = urlParams ? `?${urlParams}` : ``;


    return `${baseURL}/projects/${projectName}/collections/${collectionName}/search/${searchHandler}/feedback/hits${urlParams}`;
}
