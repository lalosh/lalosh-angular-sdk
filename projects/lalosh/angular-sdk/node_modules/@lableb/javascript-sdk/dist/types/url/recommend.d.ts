import { RecommendURLOptions, URLBuilderExecutionContext } from "../types/url";
/**
 * Generate Recommend URL
 *
 * @param {object} recommendURLOptions
 * @param {number} recommendURLOptions.id - input id of source document (source for recommend) (recommendation result will be based on it)
 * @param {string} recommendURLOptions.title - source document title
 * @param {number} recommendURLOptions.limit - limit number of documents returned in response
 * @param {string} recommendURLOptions.itemURLSchema - url schema help the user forming the feedback url for future use
 * (you can provided any url string that has the string`{id}` in it so the feedback url is automatically formed for you to use when response gets back) *
 * @param {string} recommendURLOptions.sessionId - unique session id per user
 * @param {number} recommendURLOptions.userId - unique user id
 * @param {string} recommendURLOptions.userIp - user ip address
 * @param {string} recommendURLOptions.userCountry - user country iso 3166 code
 *
 * @return {string} - URL used for the Recommend Document request
 */
export declare function recommendURL(this: URLBuilderExecutionContext, recommendURLOptions?: Partial<RecommendURLOptions>): string;
