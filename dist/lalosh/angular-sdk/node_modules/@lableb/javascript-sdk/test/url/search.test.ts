import { CountryCode, IPAddress } from '../../src/types/url';
import { URLBuilder } from '../../src/url';

describe('Test Generating Search URLs', () => {

    let options = {
        baseURL: 'https://www.example.com/api/v2',
        collectionName: 'posts',
        projectName: 'wptest',
        indexToken: '38937489374h3jhkahf978a6fhfu',
        searchToken: 'kajlfif8a678a78fh2224jh24fa23',
        searchHandler: 'default',
        autoCompleteHandler: 'suggest',
        recommendHandler: 'default',
    };
    let urlInstance = URLBuilder(options);


    beforeAll(() => {
        urlInstance = URLBuilder(options);
    });





    test('Correctly generate search URL', () => {

        let searchURL = urlInstance.searchURL();

        let rightAnswer = `${options.baseURL}/projects/${options.projectName}/collections/${options.collectionName}/search/${options.searchHandler}?token=${options.searchToken}`

        expect(searchURL).toBe(rightAnswer);
    });





    test('Correctly generate search URL with params', () => {

        let searchOptions = {
            query: 'lableb',
            skip: 1,
            limit: 3,
            userId: 44,
            userCountry: 'AF' as CountryCode,
            userIp: '333162.165.231.253' as IPAddress,
            sessionId: 'nval786afnjaf',
        };

        let searchURL = urlInstance.searchURL(searchOptions);


        let rightAnswer = `${options.baseURL}/projects/${options.projectName}/collections/${options.collectionName}/search/${options.searchHandler}?`
        rightAnswer += `q=${searchOptions.query}`;
        rightAnswer += `&skip=${searchOptions.skip}`;
        rightAnswer += `&limit=${searchOptions.limit}`;
        rightAnswer += `&user_id=${searchOptions.userId}`;
        rightAnswer += `&user_country=${searchOptions.userCountry}`;
        rightAnswer += `&user_ip=${searchOptions.userIp}`;
        rightAnswer += `&session_id=${searchOptions.sessionId}`;
        rightAnswer += `&token=${options.searchToken}`;

        expect(searchURL).toBe(rightAnswer);
    });





    test('it should throw error in generating search URL', () => {

        let emptyURLInstance = URLBuilder({ baseURL: '', collectionName: '', projectName: '' });

        expect(emptyURLInstance.searchURL).toThrow();
    });




    test('Correctly generate search feed back URL', () => {

        let searchFeedbackURL = urlInstance.searchFeedbackURL();

        let rightResult = `${options.baseURL}/projects/${options.projectName}/collections/${options.collectionName}/search/${options.searchHandler}/feedback/hits?token=${options.searchToken}`;

        expect(searchFeedbackURL).toBe(rightResult);
    });




    test('Correctly generate search feed back URL with params', () => {

        let searchFeedbackOptions = {
            query: 'test',
            itemId: 432,
            itemOrder: 2,
            url: 'https://www.example.com/item',
            sessionId: '8972789uafaf',
            userId: 43,
            userIp: '192.168.1.5' as IPAddress,
            userCountry: 'AF' as CountryCode,
        }

        let searchFeedbackURL = urlInstance.searchFeedbackURL(searchFeedbackOptions);

        let rightResult = `${options.baseURL}/projects/${options.projectName}/collections/${options.collectionName}/search/${options.searchHandler}/feedback/hits`;
        rightResult += `?q=${searchFeedbackOptions.query}`;
        rightResult += `&item_id=${searchFeedbackOptions.itemId}`;
        rightResult += `&item_order=${searchFeedbackOptions.itemOrder}`;
        rightResult += `&url=${searchFeedbackOptions.url}`;
        rightResult += `&session_id=${searchFeedbackOptions.sessionId}`;
        rightResult += `&user_id=${searchFeedbackOptions.userId}`;
        rightResult += `&user_ip=${searchFeedbackOptions.userIp}`;
        rightResult += `&user_country=${searchFeedbackOptions.userCountry}`;
        rightResult += `&token=${options.searchToken}`;

        expect(searchFeedbackURL).toBe(rightResult);
    });





});